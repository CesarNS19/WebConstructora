@{
ViewData["Title"] = "Services";
}

@section css {
<style>
  .btn-link {
    position: relative;
    z-index: 9999;
  }

  #dropzoneTruckImage {
    position: relative;
  }
</style>
}


<div class="card">
  <div class="card-body d-flex justify-content-between">
    <div>
      <span class="fw-bold text-primary">Acciones para los Servicios</span>

      <span class="mx-1 mx-sm-2 text-300">|</span>

      <button class="btn btn-primary btn-sm " type="button" id="btnTruckType" data-bs-toggle="tooltip"
              data-bs-placement="top" data-bs-original-title="Agregar Tipo de Servicio">
        Tipo de Servicio
        <i class="fas fa-plus fa-w-16"></i>
      </button>

      <button class="btn btn-warning btn-sm" style="margin-left: 10px" type="button" id="btnTruck" data-bs-toggle="tooltip"
              data-bs-placement="top" data-bs-original-title="Agregar Servicio">
        Servicio
        <i class="fas fa-plus fa-w-16"></i>
      </button>
    </div>
  </div>
</div>
<br>

<div class="card">
  <div class="card-body">
    <div class="table-responsive scrollbar">
      <table class="table table-sm  table-hover fs-10 mb-0 overflow-hidden" style="width:100%"
             id="tmainTruckType">
        <thead class="bg-200">
        <tr>
          <th class="text-900">Tipo de servicio</th>
          <th class="text-900">Estatus</th>
          <th class="text-center text-900">Acciones</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </div>
</div>
<br>

<div class="card">
  <div class="card-body">
    <div class="table-responsive scrollbar">
      <table class="table table-sm  table-hover fs-10 mb-0 overflow-hidden" style="width:100%" id="tmainTruck">
        <thead class="bg-200">
        <tr>
          <th class="text-900">Tipo de servicio</th>
          <th class="text-900">Servicio</th>
          <th class="text-900">Descripción</th>
          <th class="text-900">Total</th>
          <th class="text-900">Estatus</th>
          <th class="text-900">Imágen</th>
          <th class="text-center text-900">Acciones</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </div>
</div>

<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered col-sm-6">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmModalLabel">Confirmación</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p id="confirmMessage">¿Estás seguro de que deseas eliminar este elemento?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-danger" id="confirmButton">Eliminar</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" tabindex="-1" id="modalTruckType">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Tipo de Servicio</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="txtDescription">Tipo de Servicio <span class="Required">*</span></label>
          <input type="hidden" id="_id_truckType_" value="0" />
          <input type="text" id="txtTruckType" class="form-control" placeholder="Camión" />
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" id="btnSaveTruckType">Guardar Cambios</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" tabindex="-1" id="modalTruck">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Servicios</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label>Tipo de Servicio</label>
          <select class="form-control" id="listServiceType">
            <option value="-1">Seleccione</option>
          </select>
        </div>
        <div class="form-group">
          <label for="txtService">Servicio <span class="Required">*</span></label>
          <input type="hidden" id="_id_service_" value="0" />
          <input type="text" id="txtService" class="form-control" placeholder="Nombre del Servicio" />
        </div>
        <div class="form-group">
          <label for="txtDesc">Descripción<span class="Required">*</span></label>
          <input type="text" id="txtDesc" class="form-control" placeholder="Descripción del Servicio" />
        </div>
        <div class="form-group">
          <label for="txtTotal">Total<span class="Required">*</span></label>
          <input type="text" id="txtTotal" class="form-control" placeholder="Total del Servicio" />
        </div>
        <div class="mb-3">
          <label for="truckImagePreview" class="form-label">Imagen Actual</label>
          <img id="truckImagePreview" src="" alt="Vista previa de la imagen" style="width: 60px; height: 60px; object-fit: cover; margin-left: 10px; margin-top: 15px;">
        </div>
        <div class="col-12 mb-3">
          <div class="dropzone dropzone-single p-0" id="dropzoneTruckImage" data-dropzone="data-dropzone" style="height: 240px;"
               data-options='{"url":"/img","maxFiles":1,"dictDefaultMessage":"Arrastra o elige un archivo aquí","acceptedFiles":"image/*"}'>
            <div class="dz-message" data-dz-message="data-dz-message">
              <div class="dz-message-text">
                <i class="fas fa-cloud-upload-alt me-2" style="font-size: 24px;"></i>
                Arrastra tu archivo aquí o <span class="btn btn-link p-0 fs-10">Explora</span>
              </div>
            </div>
            <div class="dz-preview dz-preview-single" style="position: absolute;">
              <div class="dz-preview-cover dz-complete">
                <img class="dz-preview-img" src="" alt="Preview" data-dz-thumbnail="" />
                <a class="dz-remove text-danger" href="#!" data-dz-remove="data-dz-remove">
                  <span class="fas fa-times"></span>
                </a>
                <div class="dz-progress">
                  <span class="dz-upload" data-dz-uploadprogress=""></span>
                </div>
                <div class="dz-errormessage m-1">
                  <span data-dz-errormessage="data-dz-errormessage"></span>
                </div>
              </div>
              <div class="dz-progress">
                <span class="dz-upload" data-dz-uploadprogress=""></span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" id="btnSaveTruck">Guardar Cambios</button>
      </div>
    </div>
  </div>
</div>

@section JS {
<script>

  Dropzone.options.dropzoneTruckImage = {
    url: "/img", // URL de carga de archivos
    maxFiles: 1,
    acceptedFiles: "image/*",
    dictDefaultMessage: "Arrastra o elige un archivo aquí",
    init: function () {
      let dropzoneInstance = this;

      // Maneja la carga de una nueva imagen
      this.on("addedfile", function (file) {
        // Si ya hay una imagen previa, remuévela
        if (dropzoneInstance.getAcceptedFiles().length > 1) {
          dropzoneInstance.removeFile(dropzoneInstance.getAcceptedFiles()[0]);
        }
      });

      // Maneja la vista previa de la imagen
      this.on("thumbnail", function (file, dataUrl) {
        // Muestra la imagen previa en el Dropzone
        document.getElementById('truckImagePreview').src = dataUrl;
      });

      // Maneja la respuesta del servidor si es necesario
      this.on("success", function (file, response) {
        console.log("Archivo cargado con éxito");
      });

      // Maneja errores si es necesario
      this.on("error", function (file, errorMessage) {
        console.error("Error en la carga:", errorMessage);
      });

      // Agrega el manejo del clic en "Explora"
      document.querySelector("#dropzoneTruckImage .dz-message .explore-button").addEventListener("click", function () {
        dropzoneInstance.hiddenFileInput.click();
      });
    }
  };

  $(document).ready(function () {
    cargarTruckType();
    cargarTruck();

    new Cleave('#txtWeight', {
      numeral: true,
      numeralThousandsGroupStyle: 'thousand',
      numeralDecimalMark: '.',
      delimiter: ',',
      numeralDecimalScale: 2
    });

    new Cleave('#txtTruckX', {
      numeral: true,
      numeralThousandsGroupStyle: 'thousand',
      numeralDecimalMark: '.',
      delimiter: ',',
      numeralDecimalScale: 2
    });

    new Cleave('#txtTruckY', {
      numeral: true,
      numeralThousandsGroupStyle: 'thousand',
      numeralDecimalMark: '.',
      delimiter: ',',
      numeralDecimalScale: 2
    });

    new Cleave('#txtTruckZ', {
      numeral: true,
      numeralThousandsGroupStyle: 'thousand',
      numeralDecimalMark: '.',
      delimiter: ',',
      numeralDecimalScale: 2
    });

    $("#btnTruckType").click(function () {
      LimpiarFormularioTruckType();
      $("#modalTruckType").modal("show");
    });

    $("#btnTruck").click(function () {
      LimpiarFormularioTruck();
      $("#modalTruck").modal("show");
    });

    $("#btnSaveTruckType").click(function () {
      const data_TruckType = {
        TypeID: $("#_id_truckType_").val() || 0,
        TypeName: $("#txtTruckType").val(),
      };

      $.ajax({
        url: "/SFTruckType/AddUpdate",
        data: data_TruckType,
        type: "POST",
        success: function (res) {
          if (res.ok) {
            mostrarToast("Exito", res.message, "success");
            cargarTruckType();
            $("#modalTruckType").modal("hide");
            LimpiarFormularioTruckType();
          } else {
            mostrarToast("ALERTA!!", res.message, "warning");
          }
        },
        error: function () {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    });

    $("#btnSaveTruck").click(function () {
      var formData = new FormData();
      formData.append("truckID", $("#_id_truck_").val() || 0);
      formData.append("typeID", $("#listTruckType").val());
      formData.append("truckName", $("#txtTruck").val().trim());
      formData.append("truckSupportWeight", $("#txtWeight").val() || 0);
      formData.append("truckX", $("#txtTruckX").val() || 0);
      formData.append("truckY", $("#txtTruckY").val() || 0);
      formData.append("truckZ", $("#txtTruckZ").val() || 0);

      var dropzoneInstance = $("#dropzoneTruckImage").get(0).dropzone;
      var file = dropzoneInstance.getAcceptedFiles()[0];
      if (file) {
        formData.append("file", file);
      }

      $.ajax({
        url: '/SFServices/AddUpdate',
        type: 'POST',
        data: formData,
        contentType: false,
        processData: false,
        success: function (res) {
          if (res.ok) {
            $("#modalTruck").modal("hide");
            mostrarToast("Éxito", res.message, "success");
            cargarTruck();
            LimpiarFormularioTruck();
          } else {
            mostrarToast("ALERTA!!", res.message, "warning");
          }
        },
        error: function (xhr, status, error) {
          console.error("Error en AddUpdate:", error);
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    });
  });

  function cargarTruckType() {
    $.ajax({
      url: "/SFTruckType/ListTruckType",
      type: "POST",
      success: function (res) {
        if (res.ok) {
          LlenarTablaTruckType(res.data);
          let html = `<option value="-1">Seleccione</option>`;
          $.each(res.data, (index, value) => {
            html += `<option value="${value.typeID}">${value.typeName}</option>`;
          });
          $("#listTruckType").html(html);
        } else {
          mostrarToast("Error", res.message, "error");
        }
      },
      error: function () {
        alert("Ocurrió un error interno, por favor inténtalo más tarde");
      }
    });
  }

  function cargarTruck() {
    $.ajax({
      url: "/SFTruck/ListTruck",
      type: "POST",
      success: function (res) {
        if (res.ok) {
          LlenarTablaTruck(res.data);

        } else {
          mostrarToast("Error", res.message, "error");
        }
      },
      error: function () {
        alert("Ocurrió un error interno, por favor inténtalo más tarde");
      }
    });
  }

  function LlenarTablaTruckType(lista) {
    if ($.fn.DataTable.isDataTable("#tmainTruckType")) {
      $("#tmainTruckType").DataTable().destroy();
    }
    $("#tmainTruckType tbody").empty();

    let tabla = $("#tmainTruckType").DataTable({
      data: lista,
      columns: [
        { data: "typeName" },
        {
          data: "typeSTS",
          render: function (data) {
            if (data === "Activo") {
              return `<span class="badge badge rounded-pill badge-subtle-success">Activo<span class="ms-1 fas fa-check" data-fa-transform="shrink-2"></span></span>`;
            } else if (data === "Inactivo") {
              return `<span class="badge badge rounded-pill badge-subtle-warning">Inactivo<span class="ms-1 fas fa-stream" data-fa-transform="shrink-2"></span></span>`;
            }
          }
        },
        {
          data: "typeID",
          render: function (value, type, row) {
            let status = '';
            if (row.typeSTS === "Activo") {
              status = `<a class="dropdown-item text-warning" onclick="HandleStatusType(${row.typeID}, 'Deactivate');"><i class="fas fa-toggle-off me-2"></i>Desactivar</a>`;
            } else if (row.typeSTS === "Inactivo") {
              status = `<a class="dropdown-item text-success" onclick="HandleStatusType(${row.typeID}, 'Activate');"><i class="fas fa-toggle-on me-2"></i>Activar</a>`;
            }
            return `
                            <div class="dropdown font-sans-serif position-static text-end">
                                <button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false">
                                    <span class="fas fa-ellipsis-h fs-10"></span>
                                </button>
                                <div class="dropdown-menu dropdown-menu-end border py-0">
                                    <div class="py-2">
                                        <a class="dropdown-item" onclick="ShowModalTruckTypeEdit(${value});"><i class="fas fa-edit me-2"></i>Editar</a>
                                        ${status}
                                        <a class="dropdown-item text-danger" onclick="DeleteTruckType(${value});"><i class="fas fa-trash-alt me-2"></i>Eliminar</a>
                                    </div>
                                </div>
                            </div>
                        `;
          }
        }
      ],
      language: lang_mx
    });
  }

  function LlenarTablaTruck(lista) {
    if ($.fn.DataTable.isDataTable("#tmainTruck")) {
      $("#tmainTruck").DataTable().destroy();
    }
    $("#tmainTruck tbody").empty();

    let tabla = $("#tmainTruck").DataTable({
      data: lista,
      columns: [
        { data: "typeID" },
        { data: "truckName" },
        { data: "truckSupportWeight" },
        { data: "truckX" },
        { data: "truckY" },
        { data: "truckZ" },
        {
          data: "truckSTS",
          render: function (data) {
            if (data === "Activo") {
              return `<span class="badge badge rounded-pill badge-subtle-success">Activo<span class="ms-1 fas fa-check" data-fa-transform="shrink-2"></span></span>`;
            } else if (data === "Inactivo") {
              return `<span class="badge badge rounded-pill badge-subtle-warning">Inactivo<span class="ms-1 fas fa-stream" data-fa-transform="shrink-2"></span></span>`;
            }
          }
        },
        {
          data: 'truckImage',
          render: (value, type, row) => {
            return `
            <img class="" src="/img/${value}" width="40px" height="40px" alt="imagen">
          `;
          }
        },
        {
          data: "truckID",
          render: function (value, type, row) {
            let status = '';
            let statusIcon = '';
            if (row.truckSTS === "Activo") {
              status = `<a class="dropdown-item text-warning" onclick="HandleStatusTruck(${row.truckID}, 'Deactivate');" href="#!"><i class="fas fa-toggle-off me-2"></i>Desactivar</a>`;
            } else if (row.truckSTS === "Inactivo") {
              status = `<a class="dropdown-item text-success" onclick="HandleStatusTruck(${row.truckID}, 'Activate');" href="#!"><i class="fas fa-toggle-on me-2"></i>Activar</a>`;
            }
            return `
                    <div class="dropdown font-sans-serif position-static text-end">
                        <button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false">
                            <span class="fas fa-ellipsis-h fs-10"></span>
                        </button>
                        <div class="dropdown-menu dropdown-menu-end border py-0">
                            <div class="py-2">
                                <a class="dropdown-item" onclick="ShowModalTruckEdit(${value});"><i class="fas fa-edit me-2"></i>Editar</a>
                                ${status}
                                <a class="dropdown-item text-danger" onclick="DeleteTruck(${value});" href="#!"><i class="fas fa-trash-alt me-2"></i>Eliminar</a>
                            </div>
                        </div>
                    </div>
                `;
          }
        }
      ],
      language: lang_mx
    });
  }

  function ShowModalTruckTypeEdit(_typeID) {
    const data_trucktype_id = { typeID: _typeID };

    $.ajax({
      url: "/SFTruckType/listTruckType",
      data: data_trucktype_id,
      type: "POST",
      success: function (res) {
        if (res.ok) {
          const truckType = res.data[0];
          $("#_id_truckType_").val(truckType.typeID);
          $("#txtTruckType").val(truckType.typeName);
          $("#modalTruckType").modal("show");
        } else {
          alert("No se encontraron datos para el Camión seleccionado.");
        }
      },
      error: function () {
        alert("Ocurrió un error interno, por favor inténtalo más tarde.");
      }
    });
  }

  function ShowModalTruckEdit(_truckID) {
    const data_truck_id = { truckID: _truckID };

    $.ajax({
      url: "/SFTruck/listTruck",
      data: data_truck_id,
      type: "POST",
      success: function (res) {
        if (res.ok) {
          const truck = res.data[0];
          $("#_id_truck_").val(truck.truckID);
          $("#listTruckType").val(truck.typeID);
          $("#txtTruck").val(truck.truckName);
          $("#txtWeight").val(truck.truckSupportWeight);
          $("#txtTruckX").val(truck.truckX);
          $("#txtTruckY").val(truck.truckY);
          $("#txtTruckZ").val(truck.truckZ);

          const imageUrl = truck.truckImage ? `/img/${truck.truckImage}` : '';

          $("#truckImagePreview").attr("src", imageUrl);

          let dropzoneInstance = Dropzone.forElement("#dropzoneTruckImage");

          dropzoneInstance.removeAllFiles(true);

          $("#modalTruck").modal("show");
        } else {
          alert("No se encontraron datos para el Camión seleccionado.");
        }
      },
      error: function () {
        alert("Ocurrió un error interno, por favor inténtalo más tarde.");
      }
    });
  }

  function LimpiarFormularioTruckType() {
    $("#_id_truckType_").val(0);
    $("#txtTruckType").val("");
  }

  function LimpiarFormularioTruck() {
    $("#_id_service_").val("");
    $("#listServiceType").val("-1");
    $("#txtDesc").val("");
    $("#txtTotal").val("");
    $("#truckImagePreview").attr("src", "");
  }

  function HandleStatusType(typeID, action) {
    const truckType = {
      TypeID: typeID,
      Action: action
    };
    console.log(truckType);
    $.ajax({
      url: "/SFTruckType/HandleStatus",
      type: "POST",
      data: truckType,
      beforeSend: function () {
      },
      success: function (response) {
        if (response.ok) {
          mostrarToast("Éxito", response.message, "success");
          cargarTruckType();
        } else {
          mostrarToast("Error", response.message, "error");
        }
      },
      error: function () {
        alert("Ocurrió un error interno, por favor inténtalo más tarde");
      }
    });
  }

  function HandleStatusTruck(truckID, action) {
    const truck = {
      TruckID: truckID,
      Action: action
    };
    console.log(truck);
    $.ajax({
      url: "/SFTruck/HandleStatus",
      type: "POST",
      data: truck,
      beforeSend: function () {
      },
      success: function (response) {
        if (response.ok) {
          mostrarToast("Éxito", response.message, "success");
          cargarTruck();
        } else {
          mostrarToast("Error", response.message, "error");
        }
      },
      error: function () {
        alert("Ocurrió un error interno, por favor inténtalo más tarde");
      }
    });
  }

  function DeleteTruck(truckID) {
    showConfirmModal("¿Estás seguro de que deseas eliminar este camión?", function() {
      const truck = {
        TruckID: truckID,
      };
      $.ajax({
        url: "/SFTruck/DeleteTruck",
        type: "POST",
        data: truck,
        beforeSend: function () {
        },
        success: function (response) {
          if (response.ok) {
            mostrarToast("Éxito", response.message, "success");
            cargarTruck();
          } else {
            mostrarToast("Error", response.message, "error");
          }
        },
        error: function () {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    });
  }

  function DeleteTruckType(typeID) {
    showConfirmModal("¿Estás seguro de que deseas eliminar este tipo de camión?", function() {
      const trucktype = {
        TypeID: typeID,
      };
      $.ajax({
        url: "/SFTruckType/DeleteTruckType",
        type: "POST",
        data: trucktype,
        beforeSend: function () {
        },
        success: function (response) {
          if (response.ok) {
            mostrarToast("Éxito", response.message, "success");
            cargarTruckType();
          } else {
            mostrarToast("Error", response.message, "error");
          }
        },
        error: function () {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    });
  }

  function showConfirmModal(message, confirmCallback) {
    $('#confirmMessage').text(message);
    $('#confirmButton').off('click').on('click', function() {
      confirmCallback();
      $('#confirmModal').modal('hide');
    });
    $('#confirmModal').modal('show');
  }

  function mostrarToast(titulo, mensaje, tipo) {
    let icon = '';
    let alertClass = '';

    switch (tipo) {
      case 'success':
        icon = '<span class="fas fa-check-circle text-white fs-6"></span>';
        alertClass = 'alert-success';
        break;
      case 'error':
        icon = '<span class="fas fa-times-circle text-white fs-6"></span>';
        alertClass = 'alert-danger';
        break;
      case 'warning':
        icon = '<span class="fas fa-exclamation-circle text-white fs-6"></span>';
        alertClass = 'alert-warning';
        break;
      case 'info':
        icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
        alertClass = 'alert-info';
        break;
      default:
        icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
        alertClass = 'alert-info';
        break;
    }

    const alert = `
        <div class="alert ${alertClass} d-flex align-items-center" role="alert">
            <div class="me-2">${icon}</div>
            <div>${titulo}: ${mensaje}</div>
            <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>`;

    $("#Alert").html(alert);

    setTimeout(() => {
      $(".alert").alert('close');
    }, 4000);
  }

</script>
}